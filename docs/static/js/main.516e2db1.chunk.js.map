{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExperoApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","GifExperoApp","comp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2MAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAoB7C,OAEI,sBAAMC,SAbW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,SAClBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAOlB,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAvBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACTC,EADS,iDACwCC,UAAWH,GADnD,+DAEII,MAAOF,GAFX,cAETG,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAaRM,GAbQ,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,uBAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEZd,mBACtB,CACIqB,KAAK,GACLa,SAAS,IALqB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA2BtC,OAjBAC,qBAAW,WACPxB,EAAOC,GACNwB,MAAM,SAAAC,GAGCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAIGqB,EDtBwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,qCACI,qBAAIJ,UAAU,kBAAd,cAAmChB,EAAnC,OAEEoB,GAAW,mBAAGJ,UAAU,kBAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEhBxBgB,EAAe,SAAC,GAAgB,IAAbC,EAAY,EAAZA,KAAY,EAGJ1C,mBAAS,CAAC,QAHN,mBAGhC2C,EAHgC,KAGpB5C,EAHoB,KAWxC,OACI,qCACI,mCAAO2C,EAAP,OACD,cAAC,EAAD,CAAa3C,cAAgBA,IAC5B,uBAEA,6BAEI4C,EAAWpB,KAAK,SAACT,GAAD,OAER,cAAC,EAAD,CAEIA,SAAWA,GADNA,YCxB3B8B,EAAUC,SAASC,cAAc,SACvCC,IAASC,OAEL,cAAC,EAAD,CAAcN,KAAO,iBAErBE,K","file":"static/js/main.516e2db1.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length){\r\n            setCategories(cat => [inputValue,...cat])\r\n            setInputValue('');\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <input\r\n                type=\"text\"\r\n                value ={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nexport  const getGif = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=smWe0gIeZDDofqAlAWcjrAUF3pi6AFzp`\r\n        const resp = await fetch (url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title:img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        }\r\n        )\r\n        return gifs\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFecthGifs } from '../hooks/useFecthGifs';\r\n//import React, {useState, useEffect} from 'react'\r\n//import { getGif } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFecthGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__bounce\"> { category } </h3>\r\n            \r\n            { loading && <p className=\"animate__bounce\">Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n            \r\n                {\r\n                    images.map( img =>\r\n                        (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img }\r\n                        />\r\n                        \r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFecthGifs = (category) => {\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            data:[],\r\n            loading: true\r\n\r\n        }\r\n    );\r\n\r\n    useEffect (() => {\r\n        getGif(category)\r\n        .then( imgs =>{\r\n            // setTimeout( () =>{\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            // }, 3000);\r\n        })\r\n\r\n    }, [category])\r\n\r\n     \r\n\r\n    return state;\r\n\r\n}\r\n","import { useState } from 'react';\r\nimport React from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExperoApp = ( { comp } ) => {\r\n\r\n    //const categories = ['One', 'Samurai', 'Dragon'];\r\n     const [categories, setCategories]= useState(['One']);\r\n\r\n    // const handleAdd = () => {\r\n    //         setCatergories([...categories, 'Simpsons'])\r\n    //         //setCatergories(cat => [...cat, 'Simpsons'])\r\n\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2> { comp } </h2>\r\n           <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            \r\n            <ol>\r\n            {\r\n                categories.map( (category) =>\r\n                    (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={ category }  \r\n                        />\r\n                    //{\r\n                    //(  return <li key={category}>{category}</li>\r\n                    //}\r\n\r\n                    )\r\n                )\r\n            }\r\n            </ol>\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\n\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExperoApp } from './GifExperoApp';\n\nconst divRoot = document.querySelector('#root')\nReactDOM.render(\n\n    <GifExperoApp comp = 'GifExpertApp' />,\n  \n    divRoot\n);\n\n\n// GifExperoApp\n// <h2>GifExperoApp</h2>  \n// <hr />\n"],"sourceRoot":""}